<% openid_connect_providers = Map.fetch!(@configs, :openid_connect_providers) %>
<% saml_identity_providers = Map.fetch!(@configs, :saml_identity_providers) %>

<%= if @live_action == :edit_oidc do %>
  <%= live_modal(
    FzHttpWeb.SettingLive.OIDCFormComponent,
    subject: @subject,
    return_to: ~p"/settings/security",
    title: "OIDC Configuration",
    provider: get_provider(config_value(openid_connect_providers), @id) || %{id: @id},
    id: "oidc-form-component",
    form: "oidc-form"
  ) %>
<% end %>

<%= if @live_action == :edit_saml do %>
  <%= live_modal(
    FzHttpWeb.SettingLive.SAMLFormComponent,
    subject: @subject,
    return_to: ~p"/settings/security",
    title: "SAML Configuration",
    provider: get_provider(config_value(saml_identity_providers), @id) || %{id: @id},
    id: "saml-form-component",
    form: "saml-form"
  ) %>
<% end %>

<%= render(FzHttpWeb.SharedView, "heading.html",
  page_subtitle: @page_subtitle,
  page_title: @page_title
) %>

<section class="section is-main-section">
  <%= render(FzHttpWeb.SharedView, "flash.html", assigns) %>

  <h4 class="title is-4">Authentication</h4>

  <div class="block">
    <% vpn_session_duration = Map.fetch!(@configs, :vpn_session_duration) %>
    <.form
      :let={f}
      for={@configuration_changeset}
      phx-change="change"
      phx-submit="save_configuration"
    >
      <div class="field">
        <%= label(f, :vpn_session_duration, "Require Authentication For VPN Sessions",
          class: "label"
        ) %>
        <div class="field has-addons">
          <p class="control">
            <span class="select">
              <%= select(f, :vpn_session_duration, session_duration_options(vpn_session_duration),
                class: "input",
                disabled: config_has_override?(vpn_session_duration),
                selected: config_value(vpn_session_duration)
              ) %>
            </span>
          </p>
          <p class="control">
            <%= submit("Save",
              disabled: !(@form_changed and !config_has_override?(vpn_session_duration)),
              phx_disable_with: "Saving...",
              class: "button is-primary"
            ) %>
          </p>
        </div>
        <p class="help">
          <%= if config_has_override?(vpn_session_duration) do %>
            This field was overridden using <%= config_override_source(vpn_session_duration) %>; you cannot change it.
          <% else %>
            Optionally require users to periodically authenticate to the Firezone
            web UI in order to keep their VPN sessions active.
          <% end %>
        </p>
      </div>
    </.form>
  </div>

  <div class="block">
    <% local_auth_enabled = Map.fetch!(@configs, :local_auth_enabled) %>
    <strong>Local Auth</strong>

    <div class="level">
      <div class="level-left">
        <p>
          Enable or disable authentication with email and password.
          <%= if config_has_override?(local_auth_enabled) do %>
            <br />
            <i>
              This value is overridden using <%= config_override_source(local_auth_enabled) %>; you cannot change it.
            </i>
          <% end %>
        </p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input
            type="checkbox"
            phx-click="toggle"
            name="local_auth_enabled"
            phx-value-config="local_auth_enabled"
            disabled={config_has_override?(local_auth_enabled)}
            checked={config_value(local_auth_enabled)}
            value={config_toggle_status(local_auth_enabled)}
          />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block">
    <% allow_unprivileged_device_management =
      Map.fetch!(@configs, :allow_unprivileged_device_management) %>
    <strong>Allow unprivileged device management</strong>

    <div class="level">
      <div class="level-left">
        <p>
          Enable or disable management of devices on unprivileged accounts.
          <%= if config_has_override?(allow_unprivileged_device_management) do %>
            <br />
            <i>
              This value is overridden using <%= config_override_source(
                allow_unprivileged_device_management
              ) %>; you cannot change it.
            </i>
          <% end %>
        </p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input
            type="checkbox"
            phx-click="toggle"
            name="allow_unprivileged_device_management"
            phx-value-config="allow_unprivileged_device_management"
            disabled={config_has_override?(allow_unprivileged_device_management)}
            checked={config_value(allow_unprivileged_device_management)}
            value={config_toggle_status(allow_unprivileged_device_management)}
          />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <div class="block">
    <% allow_unprivileged_device_configuration =
      Map.fetch!(@configs, :allow_unprivileged_device_configuration) %>
    <strong>Allow unprivileged device configuration</strong>

    <div class="level">
      <div class="level-left">
        <p>
          Enable or disable configuration of device network settings for unprivileged users.
          <%= if config_has_override?(allow_unprivileged_device_configuration) do %>
            <br />
            <i>
              This value is overridden using <%= config_override_source(
                allow_unprivileged_device_configuration
              ) %>; you cannot change it.
            </i>
          <% end %>
        </p>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input
            type="checkbox"
            phx-click="toggle"
            name="allow_unprivileged_device_configuration"
            phx-value-config="allow_unprivileged_device_configuration"
            disabled={config_has_override?(allow_unprivileged_device_configuration)}
            checked={config_value(allow_unprivileged_device_configuration)}
            value={config_toggle_status(allow_unprivileged_device_configuration)}
          />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <h4 class="title is-4">Single Sign-On</h4>

  <div class="block">
    <p>
      Configure OIDC or SAML Single Sign-On below. See the
      <a href="https://docs.firezone.dev/authenticate/">Firezone documentation</a>
      for more details.
    </p>
  </div>

  <div class="block">
    <% disable_vpn_on_oidc_error = Map.fetch!(@configs, :disable_vpn_on_oidc_error) %>
    <strong>Auto disable VPN</strong>

    <div class="level">
      <div class="level-left">
        <p>Enable or disable auto disabling VPN connection on OIDC refresh error.</p>
        <%= if config_has_override?(disable_vpn_on_oidc_error) do %>
          <br />
          <i>
            This value is overridden using <%= config_override_source(disable_vpn_on_oidc_error) %>; you cannot change it.
          </i>
        <% end %>
      </div>
      <div class="level-right">
        <label class="switch is-medium">
          <input
            type="checkbox"
            phx-click="toggle"
            name="disable_vpn_on_oidc_error"
            phx-value-config="disable_vpn_on_oidc_error"
            disabled={config_has_override?(disable_vpn_on_oidc_error)}
            checked={config_value(disable_vpn_on_oidc_error)}
            value={config_toggle_status(disable_vpn_on_oidc_error)}
          />
          <span class="check"></span>
        </label>
      </div>
    </div>
  </div>

  <label class="label">OpenID Connect providers configuration</label>

  <%= if config_has_override?(openid_connect_providers) do %>
    <i>
      <p>
        You cannot add new change providers because this value is overridden using <%= config_override_source(
          openid_connect_providers
        ) %>.
      </p>
    </i>
  <% end %>

  <table class="table is-bordered is-hoverable is-striped is-fullwidth">
    <thead>
      <tr>
        <th>Config ID</th>
        <th>Label</th>
        <th>Client ID</th>
        <th>Discovery URI</th>
        <th>Scope</th>
        <%= unless config_has_override?(openid_connect_providers) do %>
          <th></th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <%= for provider <- config_value(openid_connect_providers) do %>
        <tr>
          <td><%= provider.id %></td>
          <td><%= provider.label %></td>
          <td><%= provider.client_id %></td>
          <td><%= provider.discovery_document_uri %></td>
          <td><%= provider.scope %></td>
          <%= unless config_has_override?(openid_connect_providers) do %>
            <td>
              <%= live_patch(to: ~p"/settings/security/oidc/#{provider.id}/edit",
              class: "button") do %>
                Edit
              <% end %>
              <button
                class="button is-danger"
                phx-click="delete"
                phx-value-key={provider.id}
                phx-value-type="openid_connect_providers"
                disabled={config_has_override?(openid_connect_providers)}
                data-confirm={"Are you sure about deleting OIDC config #{provider.label}?"}
              >
                Delete
              </button>
            </td>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>

  <%= unless config_has_override?(openid_connect_providers) do %>
    <%= live_patch(
      to: ~p"/settings/security/oidc/#{rand_string(8)}/edit",
      class: "button mb-4") do %>
      Add OpenID Connect Provider
    <% end %>
  <% end %>

  <label class="label">SAML identity providers configuration</label>

  <%= if config_has_override?(saml_identity_providers) do %>
    <p>
      <i>
        You cannot add new change providers because this value is overridden using <%= config_override_source(
          saml_identity_providers
        ) %>.
      </i>
    </p>
  <% end %>

  <table class="table is-bordered is-hoverable is-striped is-fullwidth">
    <thead>
      <tr>
        <th>Config ID</th>
        <th>label</th>
        <th>Metadata</th>
        <%= unless config_has_override?(saml_identity_providers) do %>
          <th></th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <%= for provider <- config_value(saml_identity_providers) do %>
        <tr>
          <td><%= provider.id %></td>
          <td><%= provider.label %></td>
          <td>
            <div class="line-clamp"><%= provider.metadata %></div>
          </td>
          <%= unless config_has_override?(saml_identity_providers) do %>
            <td>
              <%= live_patch(to: ~p"/settings/security/saml/#{provider.id}/edit",
              class: "button") do %>
                Edit
              <% end %>
              <button
                class="button is-danger"
                phx-click="delete"
                phx-value-key={provider.id}
                phx-value-type="saml_identity_providers"
                disabled={config_has_override?(saml_identity_providers)}
                data-confirm={"Are you sure about deleting SAML config #{provider.label}?"}
              >
                Delete
              </button>
            </td>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>

  <%= unless config_has_override?(saml_identity_providers) do %>
    <%= live_patch(
      to: ~p"/settings/security/saml/#{rand_string(8)}/edit",
      class: "button mb-4") do %>
      Add SAML Identity Provider
    <% end %>
  <% end %>
</section>
